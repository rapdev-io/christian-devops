# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Build'
  jobs:
    - job: 'Build'
      steps:
      - script: echo Build
      - task: ServiceNow-DevOps-Agent-Artifact-Registration@1
        inputs:
          connectedServiceName: 'dev92233-Christian DevOps-ServiceNow DevOps Service Connection'
          artifactsPayload: |
            {
               "artifacts": [
                  {
                     "name": "Any Value",
                     "version": "1.$(Build.BuildId)",
                     "semanticVersion": "1.$(Build.BuildId).0",
                     "repositoryName": "Any Name"
                  }
               ]
            }

- stage: 'Test'
  jobs:
    - job: 'Unit_Tests'
      steps:
      - script: echo Unit Tests
      - task: CmdLine@2
        inputs:
          script: |
            NOW=$(date +"%Y-%m-%dT%T-0500")
            testPayload='{"name":"Test-summary-1.$(Build.BuildId).0","duration":0.0,"passedTests":10,"failedTests":1,"skippedTests":0,"blockedTests":0,"totalTests":11,"startTime":"'$NOW'","finishTime":"'$NOW'","artifacts":[{"name":"Any Value","version":"1.$(Build.BuildId)"}]}'
            echo $testPayload
            curl -X POST -H 'Content-Type: application/json' -u 'devops.integration.user:Dev0psYo'  -d $testPayload 'https://dev92233.service-now.com/api/sn_devops/v1/devops/tool/test?orchestrationToolId=c52f70192f920110e633ffecf699b697'
    - job: 'Checkmarx_Scan'
      dependsOn: 'Unit_Tests'
      steps:
      - script: echo Checkmarx Scan

- stage: 'Deploy'
  jobs:
    - job: 'UAT_Deploy'
      steps:
      - script: echo UAT Deploy
      - task: ServiceNow-DevOps-Agent-Package-Registration@1
        inputs:
          connectedServiceName: 'dev92233-Christian DevOps-ServiceNow DevOps Service Connection'
          packageName: 'Anything'
          artifactsPayload: |
            {
                "artifacts": [
                {
                    "name": "Any Value",
                    "repositoryName": "Any Name",
                    "version": "1.$(build.buildId)",
                    "currentBuildInfo": "true"
                }]
            }
    - job: 'Production_Deploy'
      dependsOn: 'UAT_Deploy'
      steps:
      - script: echo Production Deploy